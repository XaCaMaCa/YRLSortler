name: Deploy App

on:
  workflow_dispatch:
    inputs:
      tag:
        description: 'Tag to deploy'
        required: true

jobs:
  deploy:
    runs-on: ubuntu-latest
    env:
      HOST: root@188.68.206.139
      DEPLOY_DIRECTORY: /root/apps/url-shortener
      CONFIG_PATH: /root/apps/url-shortener/config/prod.yaml
      ENV_FILE_PATH: /root/apps/url-shortener/config.env

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          ref: refs/heads/main

      - name: Verify tag exists
        run: |
          git fetch --all --tags --prune
          TAG="${{ github.event.inputs.tag }}"
          if ! git rev-parse "$TAG" >/dev/null 2>&1; then
            echo "❌ Error: Tag '$TAG' not found"
            echo "Available tags:"
            git tag | head -10
            exit 1
          fi
          echo "✅ Tag '$TAG' found"

      - name: Checkout tag
        run: |
          git checkout ${{ github.event.inputs.tag }}

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version-file: go.mod

      - name: Cache Go modules
        uses: actions/cache@v4
        with:
          path: ~/go/pkg/mod
          key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
          restore-keys: |
            ${{ runner.os }}-go-

      - name: Download dependencies
        run: go mod download

      - name: Build app
        run: |
          cd cmd/url-st
          CGO_ENABLED=1 GOOS=linux GOARCH=amd64 go build -o url-shortener -ldflags="-s -w" .
        env:
          CGO_ENABLED: 1
      - name: Setup SSH
        run: |
          mkdir -p ~/.ssh
          echo "${{ secrets.DEPLOY_SSH_KEY }}" > ~/.ssh/deploy_key
          chmod 600 ~/.ssh/deploy_key
          ssh-keyscan -H 188.68.206.139 >> ~/.ssh/known_hosts || true

      - name: Install rsync
        run: sudo apt-get update && sudo apt-get install -y rsync openssh-client

      - name: Create deployment directory on server
        run: |
          ssh -i ~/.ssh/deploy_key -o StrictHostKeyChecking=no ${{ env.HOST }} \
            "mkdir -p ${{ env.DEPLOY_DIRECTORY }}/config ${{ env.DEPLOY_DIRECTORY }}/storage"

      - name: Copy application binary
        run: |
          rsync -avz -e 'ssh -i ~/.ssh/deploy_key -o StrictHostKeyChecking=no' \
            cmd/url-st/url-shortener \
            ${{ env.HOST }}:${{ env.DEPLOY_DIRECTORY }}/url-shortener
      - name: Copy configuration files
        run: |
          rsync -avz -e 'ssh -i ~/.ssh/deploy_key -o StrictHostKeyChecking=no' \
            config/prod.yaml \
            ${{ env.HOST }}:${{ env.DEPLOY_DIRECTORY }}/config/prod.yaml

      - name: Copy systemd service file
        run: |
          if [ -f ".github/workflows/deployment/url-shortener.service" ]; then
            SERVICE_FILE=".github/workflows/deployment/url-shortener.service"
          elif [ -f "cmd/url-st/.github/workflows/deployment/url-shortener.service" ]; then
            SERVICE_FILE="cmd/url-st/.github/workflows/deployment/url-shortener.service"
          else
            echo "❌ Service file not found"
            exit 1
          fi
          scp -i ~/.ssh/deploy_key -o StrictHostKeyChecking=no \
            $SERVICE_FILE \
            ${{ env.HOST }}:/tmp/url-shortener.service
          ssh -i ~/.ssh/deploy_key -o StrictHostKeyChecking=no ${{ env.HOST }} \
            "sudo mv /tmp/url-shortener.service /etc/systemd/system/url-shortener.service"

      - name: Create environment file on server
        run: |
          ssh -i ~/.ssh/deploy_key -o StrictHostKeyChecking=no ${{ env.HOST }} \
            "sudo bash -c 'touch ${{ env.ENV_FILE_PATH }} && \
            chmod 600 ${{ env.ENV_FILE_PATH }} && \
            echo \"CONFIG_PATH=${{ env.CONFIG_PATH }}\" > ${{ env.ENV_FILE_PATH }} && \
            echo \"HTTP_SERVER_PASSWORD=${{ secrets.AUTH_PASS }}\" >> ${{ env.ENV_FILE_PATH }}'"

      - name: Set executable permissions
        run: |
          ssh -i ~/.ssh/deploy_key -o StrictHostKeyChecking=no ${{ env.HOST }} \
            "chmod +x ${{ env.DEPLOY_DIRECTORY }}/url-shortener"

      - name: Reload systemd and restart service
        run: |
          ssh -i ~/.ssh/deploy_key -o StrictHostKeyChecking=no ${{ env.HOST }} \
            "sudo systemctl daemon-reload && \
            sudo systemctl enable url-shortener.service && \
            sudo systemctl restart url-shortener.service && \
            sleep 3"

      - name: Verify deployment
        run: |
          ssh -i ~/.ssh/deploy_key -o StrictHostKeyChecking=no ${{ env.HOST }} \
            "systemctl is-active url-shortener.service && \
            systemctl status url-shortener.service --no-pager -l || \
            (echo '❌ Service is not active!' && journalctl -u url-shortener.service -n 50 --no-pager && exit 1)"